---
kind: pipeline
name: provisioning-tests-k3s

platform:
  os: linux
  arch: amd64

environment:
  V2PROV_TEST_DIST: "k3s"
  V2PROV_TEST_RUN_REGEX: "^Test_(General|Provisioning)_.*$"

steps:
- name: provisioning-tests-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper provisioning-tests
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request
- name: provisioning-tests-push
  image: rancher/dapper:v0.6.0
  commands:
  - dapper provisioning-tests
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: provisioning-tests-rke2

platform:
  os: linux
  arch: amd64

environment:
  V2PROV_TEST_DIST: "rke2"
  V2PROV_TEST_RUN_REGEX: "^Test_(General|Provisioning)_.*$"

steps:
- name: provisioning-tests-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper provisioning-tests
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request
- name: provisioning-tests-push
  image: rancher/dapper:v0.6.0
  commands:
  - dapper provisioning-tests
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: provisioning-operations-tests-k3s

platform:
  os: linux
  arch: amd64

environment:
  V2PROV_TEST_DIST: "k3s"
  V2PROV_TEST_RUN_REGEX: "^Test_Operation_.*$"

steps:
  - name: provisioning-operations-tests-pr
    image: rancher/dapper:v0.6.0
    commands:
      - dapper provisioning-tests
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - pull_request
  - name: provisioning-operations-tests-push
    image: rancher/dapper:v0.6.0
    commands:
      - dapper provisioning-tests
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  event:
    exclude:
      - promote
---
kind: pipeline
name: provisioning-operations-tests-rke2

platform:
  os: linux
  arch: amd64

environment:
  V2PROV_TEST_DIST: "rke2"
  V2PROV_TEST_RUN_REGEX: "^Test_Operation_.*$"

steps:
  - name: provisioning-operations-tests-pr
    image: rancher/dapper:v0.6.0
    commands:
      - dapper provisioning-tests
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      event:
        - pull_request
  - name: provisioning-operations-tests-push
    image: rancher/dapper:v0.6.0
    commands:
      - dapper provisioning-tests
    privileged: true
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

trigger:
  event:
    exclude:
      - promote
---
kind: pipeline
name: default-linux-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request

- name: build-push-tag
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: fossa-amd64
  image: rancher/dapper:v0.6.0
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: FOSSA_API_KEY
  commands:
    - dapper fossa
  volumes:
    - name: docker
      path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
      - push
      - tag

- name: stage-binaries
  image: rancher/dapper:v0.6.0
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/system-agent-installer-rancher
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-amd64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher-agent
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

- name: docker-publish-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-amd64"
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/system-agent-installer-rancher
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-amd64"
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher-agent
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-amd64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

- name: artifacts-upload
  image: plugins/s3
  settings:
    bucket: prime-artifacts
    access_key:
      from_secret: prime_artifacts_uploader-access_key
    secret_key:
      from_secret: prime_artifacts_uploader-secret_key
    source: bin/rancher-*
    strip_prefix: bin/
    target: "/rancher/${DRONE_TAG}"
  when:
    event:
    - tag

- name: check-release-images-exists
  image: rancher/dapper:v0.6.0
  failure: ignore
  commands:
  - dapper check-release-images-exist
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/tags/v*"
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: default-linux-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build-pr
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - pull_request

- name: build-push-tag
  image: rancher/dapper:v0.6.0
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: stage-binaries
  image: rancher/dapper:v0.6.0
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: docker-publish-head
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/system-agent-installer-rancher
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish-head-agent
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
    - RANCHER_TAG=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-linux-arm64
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher-agent
    registry: stgregistry.suse.com
    username:
      from_secret: stage_registry_username
  when:
    ref:
      include:
      - "refs/heads/master"
      - "refs/heads/release/v*"
    event:
    - push

- name: docker-publish
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

- name: docker-publish-installer
  image: plugins/docker
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-arm64"
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.installer
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/system-agent-installer-rancher
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

- name: docker-publish-agent
  image: plugins/docker
  environment:
    DOCKER_REGISTRY: stgregistry.suse.com
  settings:
    purge: false
    build_args:
    - ARCH=arm64
    - "VERSION=${DRONE_TAG}"
    - "RANCHER_TAG=${DRONE_TAG}-linux-arm64"
    - RANCHER_REPO=stgregistry.suse.com/rancher
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.agent
    password:
      from_secret: stage_registry_password
    repo: stgregistry.suse.com/rancher/rancher-agent
    registry: stgregistry.suse.com
    tag: "${DRONE_TAG}-linux-arm64"
    username:
      from_secret: stage_registry_username
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
---
kind: pipeline
name: default-windows-1809

platform:
  os: windows
  arch: amd64
  version: 1809

# Currently have to define "depth" as otherwise clone fails at
# https://github.com/drone/drone-git/blob/39d233b3d9eccc68e66508a06a725a2567f33143/windows/clone-tag.ps1#L12
clone:
  depth: 20

steps:
  - name: build-push-tag
    pull: always
    image: rancher/dapper:v0.6.0
    commands:
      - dapper.exe -f Dockerfile-windows.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push
        - tag

  - name: stage-binaries
    image: rancher/dapper:v0.6.0
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      purge: false
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: stage_registry_password
      repo: stgregistry.suse.com/rancher/rancher-agent
      registry: stgregistry.suse.com
      tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-windows-1809
      username:
        from_secret: stage_registry_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      ref:
        include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-1809-amd64
    settings:
      purge: false
      build_args:
        - SERVERCORE_VERSION=1809
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: stage_registry_password
      repo: stgregistry.suse.com/rancher/rancher-agent
      registry: stgregistry.suse.com
      tag: "${DRONE_TAG}-windows-1809"
      username:
        from_secret: stage_registry_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote

---
kind: pipeline
name: default-windows-ltsc2022

platform:
  os: windows
  arch: amd64
  version: 2022

# Currently have to define "depth" as otherwise clone fails at
# https://github.com/drone/drone-git/blob/39d233b3d9eccc68e66508a06a725a2567f33143/windows/clone-tag.ps1#L12
clone:
  depth: 20

steps:
  - name: build-push-tag
    pull: always
    image: rancher/dapper:v0.6.0
    commands:
      - dapper.exe -f Dockerfile-windows.dapper -d ci
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push
        - tag

  - name: stage-binaries
    image: rancher/dapper:v0.6.0
    commands:
      - "cp -r ./bin/* ./package/windows/"
    when:
      instance:
        - drone-publish.rancher.io
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
          - "refs/tags/v*"
      event:
        - push
        - tag

  - name: docker-publish-head-agent
    image: plugins/docker:windows-ltsc2022-amd64
    settings:
      purge: false
      build_args:
        - SERVERCORE_VERSION=ltsc2022
        - ARCH=amd64
        - VERSION=${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-head
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: stage_registry_password
      repo: stgregistry.suse.com/rancher/rancher-agent
      registry: stgregistry.suse.com
      tag: ${DRONE_BRANCH/release\//}-${DRONE_COMMIT}-windows-ltsc2022
      username:
        from_secret: stage_registry_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      ref:
        include:
          - "refs/heads/master"
          - "refs/heads/release/v*"
      event:
        - push

  - name: docker-publish-agent
    image: plugins/docker:windows-ltsc2022-amd64
    settings:
      purge: false
      build_args:
        - SERVERCORE_VERSION=ltsc2022
        - ARCH=amd64
        - "VERSION=${DRONE_TAG}"
      context: package/windows
      custom_dns: 1.1.1.1
      dockerfile: package/windows/Dockerfile.agent
      password:
        from_secret: stage_registry_password
      repo: stgregistry.suse.com/rancher/rancher-agent
      registry: stgregistry.suse.com
      tag: "${DRONE_TAG}-windows-ltsc2022"
      username:
        from_secret: stage_registry_username
    volumes:
      - name: docker_pipe
        path: \\\\.\\pipe\\docker_engine
    when:
      event:
        - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
      - promote
---

kind: pipeline
name: manifest

steps:
- name: push-installer-manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest-installer.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: push-installer-manifest-head
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest-installer-head.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push

- name: push-agent-manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest-agent.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: push-agent-manifest-head
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest-agent-head.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push

- name: push-manifest-head
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest-head.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push

- name: push-manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: stage_registry_username
    password:
      from_secret: stage_registry_password
    spec: manifest.tmpl
    ignore_missing: true
  when:
    instance:
      include:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: build-chart
  image: rancher/dapper:v0.6.0
  commands:
  - dapper chart/ci
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
      - drone-publish.rancher.io
    ref:
      include:
        - "refs/heads/master"
        - "refs/heads/release/v*"
        - "refs/tags/v*"
    event:
    - push
    - tag

- name: chart-publish
  image: plugins/s3
  settings:
    bucket: charts.optimus.rancher.io
    access_key:
      from_secret: optimus_charts_access_key
    secret_key:
      from_secret: optimus_charts_secret_key
    source: bin/chart/**/*
    strip_prefix: bin/chart/
    target: /server-charts
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote

depends_on:
- default-linux-amd64
- default-linux-arm64
- default-windows-1809
- default-windows-ltsc2022
---
kind: pipeline
name: docker-image-digests-linux

platform:
  os: linux
  arch: amd64

steps:
- name: docker-image-digests
  image: rancher/dapper:v0.6.0
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  commands:
  - dapper generate-linux-digests.sh
  when:
    instance:
      include:
      - drone-publish.rancher.io
    event:
    - tag
- name: artifacts-upload
  image: plugins/s3
  settings:
    bucket: prime-artifacts
    access_key:
      from_secret: prime_artifacts_uploader-access_key
    secret_key:
      from_secret: prime_artifacts_uploader-secret_key
    source: bin/rancher-images-digests-linux-*
    strip_prefix: bin/
    target: "/rancher/${DRONE_TAG}"
  when:
    event:
    - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
    exclude:
    - promote
    - pull_request

depends_on:
- default-linux-amd64
- default-linux-arm64
---
kind: pipeline
name: docker-image-digests-windows-1809

platform:
  os: windows
  arch: amd64
  version: 1809

# Currently have to define "depth" as otherwise clone fails at
# https://github.com/drone/drone-git/blob/39d233b3d9eccc68e66508a06a725a2567f33143/windows/clone-tag.ps1#L12
clone:
  depth: 20

steps:
- name: docker-image-digests
  image: rancher/drone-docker-image-digests:v0.1.0
  environment:
    PLUGIN_GITHUB_REPOSITORY: "rancher/rancher"
    PLUGIN_GITHUB_TOKEN:
      from_secret: github_token
    PLUGIN_GITHUB_TAG: "${DRONE_TAG}"
    PLUGIN_INPUT_FILE: "rancher-windows-images.txt"
    PLUGIN_OUTPUT_FILE: "rancher-images-digests-windows-1809.txt"
    PLUGIN_REGISTRY: "stgregistry.suse.com"
  volumes:
    - name: docker_pipe
      path: \\\\.\\pipe\\docker_engine
  when:
    instance:
      include:
      - drone-publish.rancher.io
    event:
    - tag
- name: artifacts-upload
  image: plugins/s3
  settings:
    bucket: prime-artifacts
    access_key:
      from_secret: prime_artifacts_uploader-access_key
    secret_key:
      from_secret: prime_artifacts_uploader-secret_key
    source: rancher-images-digests-windows-1809.txt
    target: "/rancher/${DRONE_TAG}"
  when:
    event:
    - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
    - promote
    - pull_request

depends_on:
- default-linux-amd64
- default-windows-1809

---
kind: pipeline
name: docker-image-digests-windows-ltsc2022

platform:
  os: windows
  arch: amd64
  version: 2022

# Currently have to define "depth" as otherwise clone fails at
# https://github.com/drone/drone-git/blob/39d233b3d9eccc68e66508a06a725a2567f33143/windows/clone-tag.ps1#L12
clone:
  depth: 20

steps:
- name: docker-image-digests
  image: rancher/drone-docker-image-digests:v0.1.0
  environment:
    PLUGIN_GITHUB_REPOSITORY: "rancher/rancher"
    PLUGIN_GITHUB_TOKEN:
      from_secret: github_token
    PLUGIN_GITHUB_TAG: "${DRONE_TAG}"
    PLUGIN_INPUT_FILE: "rancher-windows-images.txt"
    PLUGIN_OUTPUT_FILE: "rancher-images-digests-windows-ltsc2022.txt"
    PLUGIN_REGISTRY: "stgregistry.suse.com"
  volumes:
    - name: docker_pipe
      path: \\\\.\\pipe\\docker_engine
  when:
    instance:
      include:
      - drone-publish.rancher.io
    event:
    - tag
- name: artifacts-upload
  image: plugins/s3
  settings:
    bucket: prime-artifacts
    access_key:
      from_secret: prime_artifacts_uploader-access_key
    secret_key:
      from_secret: prime_artifacts_uploader-secret_key
    source: rancher-images-digests-windows-ltsc2022.txt
    target: "/rancher/${DRONE_TAG}"
  when:
    event:
    - tag

volumes:
  - name: docker_pipe
    host:
      path: \\\\.\\pipe\\docker_engine

trigger:
  event:
    exclude:
    - promote
    - pull_request

depends_on:
- default-linux-amd64
- default-windows-ltsc2022
